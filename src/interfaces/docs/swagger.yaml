openapi: 3.0.3
info:
  title: Auth Service API
  description: Serviço de autenticação com JWT e Refresh Token
  version: "1.0.0"
servers:
  - url: http://localhost:3000/api/auth
    description: Servidor de Desenvolvimento
paths:
  /login:
    post:
      summary: Login do usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: usuario@exemplo.com
                password:
                  type: string
                  example: senha123
      responses:
        '200':
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Login realizado com sucesso
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                  acessToken:
                    type: string
        '401':
          description: Credenciais inválidas
  /refresh:
    get:
      summary: Gerar novo Access Token via Refresh Token
      responses:
        '200':
          description: Novo Access Token gerado
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  msg:
                    type: string
                    example: Novo Access Token gerado com sucesso.
        '401':
          description: Refresh Token inválido ou expirado
  /user:
    get:
      summary: Buscar dados do usuário autenticado
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Dados do usuário retornados
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
        '401':
          description: Token inválido ou ausente
  /logout:
    post:
      summary: Logout do usuário
      responses:
        '200':
          description: Logout realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    example: Logout realizado com sucesso
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT